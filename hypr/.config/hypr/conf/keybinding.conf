# ██╗  ██╗███████╗██╗   ██╗██████╗ ██╗███╗   ██╗██████╗ ██╗███╗   ██╗ ██████╗ 
# ██║ ██╔╝██╔════╝╚██╗ ██╔╝██╔══██╗██║████╗  ██║██╔══██╗██║████╗  ██║██╔════╝ 
# █████╔╝ █████╗   ╚████╔╝ ██████╔╝██║██╔██╗ ██║██║  ██║██║██╔██╗ ██║██║  ███╗
# ██╔═██╗ ██╔══╝    ╚██╔╝  ██╔══██╗██║██║╚██╗██║██║  ██║██║██║╚██╗██║██║   ██║
# ██║  ██╗███████╗   ██║   ██████╔╝██║██║ ╚████║██████╔╝██║██║ ╚████║╚██████╔╝
# ╚═╝  ╚═╝╚══════╝   ╚═╝   ╚═════╝ ╚═╝╚═╝  ╚═══╝╚═════╝ ╚═╝╚═╝  ╚═══╝ ╚═════╝ 
#-----------------------------------------------------------------------------

$mainMod = SUPER # Sets "Windows" key as main modifier

# Program shortcuts
bind = $mainMod, Q, exec, $terminal
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, Space, exec, $menu
bind = $mainMod, C, exec, $webBrowser

# Basics
bind = $mainMod, W, killactive,
bind = $mainMod Shift Alt Ctrl, Q, exit,
bind = $mainMod, V, togglefloating,
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, O, togglesplit, # dwindle
bind = $mainMod, F, fullscreen,1
bind = $mainMod Shift, F, fullscreen

# Alt tab
# bind = Alt, Tab, cyclenext,
# bind = Alt Shift, Tab, cyclenext, prev
bind = Alt, Tab, focusurgentorlast
bind = Alt, Tab, bringactivetotop,

# Screenshot
bind = $mainMod, Equal, exec, hyprshot -m window
bind = $mainMod Shift, Equal, exec, hyprshot -m region
bind = $mainMod Ctrl, Equal, exec, hyprshot -m output

# Move focus with mainMod + arrow keys
bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
bind = $mainMod, K, movefocus, u
bind = $mainMod, J, movefocus, d

# Move foucs to floating window
bind = $mainMod, i, exec, $(hyprctl activewindow -j | jq '.floating') && hyprctl dispatch cyclenext tiled || hyprctl dispatch cyclenext floating

bind = $mainMod, Left, movefocus, l
bind = $mainMod, Right, movefocus, r
bind = $mainMod, Up, movefocus, u
bind = $mainMod, Down, movefocus, d

# If Split window is focused, Move split
# But if floating window is focused, Move floating window by pixel
#H(←)
bind = $mainMod SHIFT, H, exec, sh -c 'if hyprctl activewindow -j | jq -e ".floating" >/dev/null; then \
  hyprctl dispatch moveactive -100 0; \
else \
  hyprctl dispatch movewindow l; \
fi'

# J(↓)
bind = $mainMod SHIFT, J, exec, sh -c 'if hyprctl activewindow -j | jq -e ".floating" >/dev/null; then \
  hyprctl dispatch moveactive 0 100; \
else \
  hyprctl dispatch movewindow d; \
fi'

# K(↑)
bind = $mainMod SHIFT, K, exec, sh -c 'if hyprctl activewindow -j | jq -e ".floating" >/dev/null; then \
  hyprctl dispatch moveactive 0 -100; \
else \
  hyprctl dispatch movewindow u; \
fi'

# L(→)
bind = $mainMod SHIFT, L, exec, sh -c 'if hyprctl activewindow -j | jq -e ".floating" >/dev/null; then \
  hyprctl dispatch moveactive 100 0; \
else \
  hyprctl dispatch movewindow r; \
fi'

# Resizing windows
bind = $mainMod Ctrl, H, resizeactive, -50 0
bind = $mainMod Ctrl, L, resizeactive, 50 0
bind = $mainMod Ctrl, K, resizeactive, 0 -50
bind = $mainMod Ctrl, J, resizeactive, 0 50

# Toggle monitor focus (Only for 2 monitors)
bind = $mainMod, semicolon, exec, sh -c '\
  curr=$(hyprctl -j monitors | jq -r ".[] | select(.focused==true).name"); \
  other=$(hyprctl -j monitors | jq -r ".[] | select(.name!=\"$curr\" and .dpmsStatus==true).name" | head -n1); \
  [ -n "$other" ] && hyprctl dispatch focusmonitor "$other"'

# Toggle move window to opposite monitor (Only for 2 monitors)
bind = $mainMod Shift, semicolon, exec, sh -c '\
win=$(hyprctl activewindow -j | jq -r ".address"); \
curr=$(hyprctl -j monitors | jq -r ".[] | select(.focused==true).name"); \
other=$(hyprctl -j monitors | jq -r ".[] | select(.name!=\"$curr\").name" | head -n1); \
[ -n "$other" ] && hyprctl dispatch movewindow mon:"$other"; \
hyprctl dispatch focusmonitor "$other"'

################
## Work space ##
################

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, apostrophe, workspace, 5

bind = $mainMod Alt, 1, workspace, 6
bind = $mainMod Alt, 2, workspace, 7
bind = $mainMod Alt, 3, workspace, 8
bind = $mainMod Alt, 4, workspace, 9
bind = $mainMod Alt, apostrophe, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT,apostrophe, movetoworkspace, 5

bind = $mainMod Alt SHIFT, 1, movetoworkspace, 6
bind = $mainMod Alt SHIFT, 2, movetoworkspace, 7
bind = $mainMod Alt SHIFT, 3, movetoworkspace, 8
bind = $mainMod Alt SHIFT, 4, movetoworkspace, 9
bind = $mainMod Alt SHIFT, apostrophe, movetoworkspace, 10

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

bind = $mainMod, period, workspace, +1
bind = $mainMod, comma, workspace, -1

bind = $mainMod SHIFT, period, movetoworkspace, +1
bind = $mainMod SHIFT, comma, movetoworkspace, -1


# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl -e4 -n2 set 5%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl -e4 -n2 set 5%-

# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pau
bindl = , XF86AudioPrev, exec, playerctl previous

# --------PlayerCtl--------
# Spotify
bind = $mainMod, m, exec, playerctl play-pause --player=spotify,mpv,%any play-pause 
bindo = $mainMod, m, exec, playerctl next --player=spotify,mpv,%any play-pause
# FireFox
bind = $mainMod SHIFT, m, exec, playerctl play-pause --player=firefox,mpv,%any play-pause 
